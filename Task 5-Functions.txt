1. Do the below programs in anonymous function & IIFE

a. Print odd numbers in an array

Anonymous Function:
-------------------

var a =[1,2,3,4,5,6,7];
var oddnumber = function(x){
    return x%2==1;
}
console.log(a.filter(oddnumber));

IIFE:
------
var a =[1,2,3,4,5,6,7];

var odd =( function(){
    var b = a.filter(result);
  function  result(x){
        return x%2==1;
    }
return b;
    
})();
console.log(odd);
-----------------------------------------------------------------------------------------------------------
b.Convert all the strings to title caps in a string array

Anonymous Function:
------------------

var sentence = "iam learning javascript as of now";
var words = sentence.split(' ');

var result = function(x){
  var d =   x[0].toUpperCase()+x.slice(1).toLowerCase();
 
  return d;
}
var ee = words.map(result);
var eee = ee.join(" ");
console.log(eee)

IIFE:
-----

var sentence = "iam learning javascript as of now";
var d = sentence.split(' ');
var words = (function(){
    var result =d.map(result);
    function result(x){
        var d = x[0].toUpperCase()+x.slice(1).toLowerCase();
        return d;
        
    }
    var eee = result.join(' ');
    console.log(eee)
})();

Output: 
Iam Learning Javascript As Of Now
------------------------------------------------------------------------------------------------------------------------
c. Sum of all numbers in an array
Anonymous Function: 
--------------------

var a = [1,2,3,4,5];
var result = function (x,y){
    x = x +y;
    return x;
}
console.log(a.reduce(result));

IIFE: 
-------
var a =[1,2,3,4,5];

var result = (function(){
    var d = a.reduce(final);
    function final(x,y){
        x = x+y;
        return x;
    }
    return d;
})();
console.log(result);

Output:
15
-----------------------------------------------------------------------------------------------------------------------------------
d. Return all the prime numbers in an array

Anonymous Function:
-------------------

var a = [1,2,3,4,15,19,23];
var arr = function(a){
var b =[];
var d;
var e;
for(var i=0; i<a.length; i++){
    var count = 0;
    for(var y=1; y<=a[i]; y++){
        if(a[i]%y==0)
        {
            count++;
        }
    }
    if(count==2){
        e = b.push(a[i]);
    }
}
    return b;
};
    console.log(arr(a));

IIFE: 
---------

var a = [1,2,3,4,15,19,23];
var arr = (function(){
    var result = prime(a);
    function prime(a)
    {
var b =[];
var d;
var e;
for(var i=0; i<a.length; i++){
    var count = 0;
    for(var y=1; y<=a[i]; y++){
        if(a[i]%y==0)
        {
            count++;
        }
    }
    if(count==2){
        e = b.push(a[i]);
    }
}
    return b;
}
return result;
})();
console.log(arr);
    

Output: 
[ 2, 3, 19, 23 ]
-------------------------------------------------------------------------------------------------------------------------
e . Return all the palindromes in an array

Anonymous Function:
--------------------
let arr = ['RAR','TATA','MADAM'];
    let newarr =[];
    let b =2;
let fun1 = ()=>{
  for(i=0; i<arr.length; i++)
{
    let result = arr[i].split('').reverse().join('');
    if(result==arr[i])
    {
        newarr.push(result);
    }
    
}
return newarr;
};
console.log(fun1());


IIFE function:
--------------

let arr = ['RAs','TATA','MADAM'];
    let newarr =[];
    let b =2;
(function(){
  for(i=0; i<arr.length; i++)
{
    let result = arr[i].split('').reverse().join('');
    if(result==arr[i])
    {
        newarr.push(result);
    }
}
console.log(newarr);  

})();
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
f.Return median of two sorted arrays of the same size.

Anonymous Function:
--------------------

let arr1 =[4,7];
let arr2 =[2,5];
let fun1 = ()=>{
  for(i=0; i<arr2.length; i++)
{
    arr1.push(arr2[i]);
}
let value;
value =0;
for(i=(((arr1.length)/(2))-(1)); i<=arr1.length/2; i++)
{
    value = value + arr1[i];
}
value = value/2;
return value;
};

console.log(fun1())


IIFE Function:
--------------

let arr1 =[4,7];
let arr2 =[2,5];
(function(){
for(i=0; i<arr2.length; i++)
{
    arr1.push(arr2[i]);
}
let value;
value =0;
for(i=(((arr1.length)/(2))-(1)); i<=arr1.length/2; i++)
{
    value = value + arr1[i];
}
value = value/2;
console.log(value);


})();

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
g. Remove duplicates from an array

Anonymous Function:
---------------------

let arr =[1,7,9,11,7,9]
let newarr =[];
let fun1 =()=>{
for(let i=0; i<arr.length; i++)
{
    if(!newarr.includes(arr[i]))
    {
        newarr.push(arr[i]);
    }
}
return newarr;
}
console.log(fun1());


IIFE Function:
--------------

let arr =[1,7,9,11,7,9]
let newarr =[];
(function(){
for(let i=0; i<arr.length; i++)
 {
    if(!newarr.includes(arr[i]))
    {
        newarr.push(arr[i]);
    }
 }
 console.log(newarr)
})();
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
h.Rotate an array by k times

Anonymous Function:
-------------------

let arr =[1,7,9,11,7,9];

let newarr;
let count =0;
let result =0;
let temp = arr.length-1;
let fun1 =(k)=>{
if(k>=temp)
{
    
    newarr=[];
    let value = (k%arr.length);
    for(let i=value; i<arr.length; i++)
    {
        newarr.push(arr[i]);
    }
   
  let result = arr.length-newarr.length;
  for(i=0; i<result; i++)
  {
      newarr.push(arr[i]);
  }
  //console.log(newarr);

    
}
else{
for(i=1; i<=k; i++)
{
    
newarr =[];

    newarr.push(arr[i]);
    for(j=i+1; j<arr.length; j++)
    {
        newarr.push(arr[j]);
    }
    let result = arr.length-newarr.length;
    for(i=0; i<result; i++)
    {
        newarr.push(arr[i]);
    }
    
    count++;

}
//console.log(newarr);
}
return newarr;
};
console.log(fun1(6001));

IIFE Function:
--------------
let arr =[1,7,9,11,7,9];
let k=5;
let newarr;
let count =0;
let result =0;
let temp = arr.length-1;
(function(){
if(k>=temp)
{
    
    newarr=[];
    let value = (k%arr.length);
    for(let i=value; i<arr.length; i++)
    {
        newarr.push(arr[i]);
    }
   
  let result = arr.length-newarr.length;
  for(i=0; i<result; i++)
  {
      newarr.push(arr[i]);
  }
  console.log(newarr);

    
}
else{
for(i=1; i<=k; i++)
{
    
newarr =[];

    newarr.push(arr[i]);
    for(j=i+1; j<arr.length; j++)
    {
        newarr.push(arr[j]);
    }
    let result = arr.length-newarr.length;
    for(i=0; i<result; i++)
    {
        newarr.push(arr[i]);
    }
    
    count++;

}
console.log(newarr);
}

})();
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.  Do the below programs in arrow functions

a. Print odd numbers in an array


let oddnumber =(b)=>{
return b.filter(i=>i%2==1);
}
console.log(oddnumber([15,2,7,3,1,8]));
------------------------------------------------------------------------------------------------------------------------------
b. Convert all the strings to title caps in a string array

let uppercase =(b)=>{
return (b[0].toUpperCase()+b.slice(1).toLowerCase());
};
console.log(uppercase("iam learning javascript as of now"));
------------------------------------------------------------------------------------------------------------------------------------
c.Sum of all numbers in an array

let sumofnum =(b)=>{
let sum =0;
for(i=0; i<b.length; i++)
{
    sum = sum+b[i];
}
return sum;
};
console.log(sumofnum([1,4,5,7]));
-------------------------------------------------------------------------------------------------------------------------------------------
d. Return all the prime numbers in an array


let primenum =(b)=>{
let result;
let resultarr=[];

for(i=0; i<b.length; i++)
{
    let count =0;
    for(j=1; j<=b[i]; j++)
    {
        result = b[i]%j;
        if(result==0)
        {
            count++;
        }
    }
    if(count<=2)
    {
      resultarr.push(b[i]);
    }
}
return resultarr;
};
console.log(primenum([1,4,5,7,8,11,9,10]));
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
e. Return all the palindromes in an array


    let newarr =[];
   
let fun1 = (arr)=>{
  for(i=0; i<arr.length; i++)
{
    let result = arr[i].split('').reverse().join('');
    if(result==arr[i])
    {
        newarr.push(result);
    }
    
}
return newarr;
};
console.log(fun1(['RAR','TATA','MADAM','MALAYALAM']));
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
